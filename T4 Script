function round(number,decimals)
    local power = 10^decimals
    return math.floor((number/1000) * power) / power
end 

function oreStatus(percent)
    if percent <= 25 then return "<th style=\"color: red;\">LOW</th>"
    elseif percent > 25 and percent < 50 then return "<th style=\"color: orange;\">LOW</th>"
    else return "<th style=\"color: green;\">GOOD</th>"
    end 
end
local useL = 1 --export: Use 1 for L or 0 for t
if useL == 1 then
    unitMeasure = "KL"
elseif useL == 0 then
    unitMeasure = "T"
end

-- Cobaltite Variables 
local maxCobaltite = 10400 --export: This is the maximum mass allowed in container. Update as needed
local weightCobaltite = 6.33 --export:
if useL == 1 then
    massCobaltite = round(math.ceil(cobaltite.getItemsMass()/weightCobaltite),1)
elseif useL == 0 then
    massCobaltite = round(math.ceil(cobaltite.getItemsMass()),1)
end
local percentCobaltite = math.ceil(((math.ceil((cobaltite.getItemsMass()/weightCobaltite) - 0.5)/maxCobaltite)*100))
local statusCobaltite = oreStatus(percentCobaltite)
    
-- Cryolite Variables
local maxCryolite = 10400 --export: This is the maximum mass allowed in container. Update as needed
local weightCryolite = 2.95  --export:
if useL == 1 then
    massCryolite = round(math.ceil(cryolite.getItemsMass()/weightCryolite),1)
elseif useL == 0 then
    massCryolite = round(math.ceil(cryolite.getItemsMass()),1)
end
local percentCryolite = math.ceil(((math.ceil((cryolite.getItemsMass()/weightCryolite) - 0.5)/maxCryolite)*100))
local statusCryolite = oreStatus(percentCryolite)

-- Gold Variables
local maxGold = 10400 --export: This is the maximum mass allowed in container. Update as needed
local weightGold = 19.3  --export:
if useL == 1 then
    massGold = round(math.ceil(gold.getItemsMass()/weightGold),1)
elseif useL == 0 then
    massGold = round(math.ceil(gold.getItemsMass()),1)
end
local percentGold = math.ceil(((math.ceil((gold.getItemsMass()/weightGold) - 0.5)/maxGold)*100))
local statusGold = oreStatus(percentGold)

-- Kolbeckite Variables
local maxKolbeckite = 10400 --export: This is the maximum mass allowed in container. Update as needed
local weightKolbeckite = 2.37  --export:
if useL == 1 then
    massKolbeckite = round(math.ceil(kolbeckite.getItemsMass()/weightKolbeckite),1)
elseif useL == 0 then
    massKolbeckite = round(math.ceil(kolbeckite.getItemsMass()),1)
end
local percentKolbeckite = math.ceil(((math.ceil((kolbeckite.getItemsMass()/weightKolbeckite) - 0.5)/maxKolbeckite)*100))
local statusKolbeckite = oreStatus(percentKolbeckite)


html = [[
<div class="bootstrap">
<h1 style="
	font-size: 8em;
">T4 Ore Status</h1>
<table 
style="
	margin-top: 10px;
	margin-left: auto;
	margin-right: auto;
	width: 80%;
	font-size: 4em;
">
	</br>
	<tr style="
		width: 100%;
		margin-bottom: 30px;
		background-color: blue;
		color: white;
	">
		<th>Ore</th>
		<th>Qty</th>
		<th>Levels</th>
		<th>Status</th>
	<tr>
		<th>Cobaltite</th>
		<th>]]..massCobaltite..unitMeasure..[[</th>
		<th>]]..percentCobaltite..[[%</th>
		]]..statusCobaltite..[[
	</tr>
	<tr>
		<th>Cryolite</th>
		<th>]]..massCryolite..unitMeasure..[[</th>
		<th>]]..percentCryolite..[[%</th>
		]]..statusCryolite..[[
	</tr>
	<tr>
		<th>Gold</th>
		<th>]]..massGold..unitMeasure..[[</th>
		<th>]]..percentGold..[[%</th>
		]]..statusGold..[[
	</tr>
	<tr>
		<th>Kolbeckite</th>
		<th>]]..massKolbeckite..unitMeasure..[[</th>
		<th>]]..percentKolbeckite..[[%</th>
		]]..statusKolbeckite..[[
	</tr>

</table>
</div>
]]

screen.setHTML(html)
